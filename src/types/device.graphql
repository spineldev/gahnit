type Device {
  id: ID!
  type: DeviceType!

  serialNumber: String!
  UDTNumber: String!
  VINnumber: String
  recordNumber: String
  registrationNumber: String

  productionYear: String!
  producent: String!

  capacity: String

  owner: Customer!

  actions: [Action!]!
}

type DeviceType {
  id: ID!
  name: String!
  preferedName: String
  conservationEveryNDays: Int
}

interface Action {
  id: ID!
  type: String!
  date: String!
  device: Device!
  customer: Customer!
}

type Service implements Action {
  id: ID!
  type: String!
  date: String!
  device: Device!
  customer: Customer!
  elements: [Element!]!
  employee: String
  start: String
  end: String
}

type Protocol implements Action {
  id: ID!
  type: String!
  date: String!
  device: Device!
  customer: Customer!
  inspector: String!
  results: String!
  notes: String
}

type Element {
  id: ID!
  name: String
  amount: Float
  price: Float
}



type Query {
  devices: [Device!]!
  device(id: ID!): Device!

  deviceTypes: [DeviceType!]!
  deviceType(id: ID!): DeviceType!
}

type Mutation {
  createDevice(
    serialNumber: String!
    UDTNumber: String!
    productionYear: String!
    producent: String!
    type: ID!
    owner: ID
  ): Device!
  updateDevice(id: ID!, data: DeviceUpdateInput!): Device!
  deleteDevice(id: ID!): Device!

  addAction(deviceID: ID!, data: AddActionInput!): Action!
  removeAction(id: ID!): Action!
  updateAction(id: ID!, data: ActionUpdateInput!): Action!
}


input DeviceUpdateInput {
  serialNumber: String
  UDTNumber: String
  VINnumber: String
  recordNumber: String
  registrationNumber: String
  productionYear: String
  producent: String
  capacity: String
  type: ID
  owner: ID
}

input AddActionInput {
  service: AddServiceActionInput
  protocol: AddProtocolActionInput
}

input AddServiceActionInput {
  date: String!
  customer: ID!
  device: ID!
  elements: [ElementInput!]!
  employee: String
  start: String
  end: String
}

input ElementInput {
  name: String!
  amount: Float
  price: Float
}

input AddProtocolActionInput {
  date: String!
  customer: ID!
  device: ID!
  inspector: String!
  results: String!
  notes: String
}


input ActionUpdateInput {
  service: ServiceActionUpdateInput
  protocol: ProtocolActionUpdateInput
}

input ServiceActionUpdateInput {
  date: String
  device: ID
  customer: ID
  employee: String
  start: String
  end: String
}

input ProtocolActionUpdateInput {
  date: String
  device: ID
  customer: ID
  inspector: String
  results: String
  notes: String
}