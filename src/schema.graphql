# import Customer from "./generated/prisma.graphql"
# import Device from "./generated/prisma.graphql"
# import DeviceType from "./generated/prisma.graphql"
# import AddressCreateInput from "./generated/prisma.graphql"
# import AddressUpdateDataInput from "./generated/prisma.graphql"

type Query {
  customers: [Customer!]!
  customer(id: ID!): Customer!

  devices: [Device!]!
  device(id: ID!): Device!

  deviceTypes: [DeviceType!]!
  deviceType(id: ID!): DeviceType!

  users: [User!]!
  user(id: ID!): User!
  me: User
}

type Mutation {
  createUser(username: String!, password: String!, displayName: String!): User!
  updateUser(id: ID!, password: String, displayName: String): User!
  deleteUser(id: ID!): User!

  login(username: String!, password: String!): AuthPayload!

  createCustomer(name: String!, nip: String!, address: AddressCreateInput!): Customer!
  updateCustomer(id: ID!, name: String!, nip: String!, address: AddressUpdateDataInput!): Customer!
  deleteCustomer(id: ID!): Customer!

  createDevice(
    serialNumber: String!
    UDTNumber: String!
    productionYear: String!
    producent: String!
    type: ID!
    owner: ID
  ): Device!
  updateDevice(id: ID!, data: DeviceUpdateInput!): Device!
  deleteDevice(id: ID!): Device!
}

# type Subscription {
#   feedSubscription: PostSubscriptionPayload!
# }

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  username: String!
  displayName: String!
}
